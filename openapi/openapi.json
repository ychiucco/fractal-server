{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/alive/": {"get": {"summary": "Alive", "operationId": "alive_api_alive__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/project/": {"get": {"tags": ["V1 Project"], "summary": "Get List Project", "description": "Return list of projects user is member of", "operationId": "get_list_project_api_v1_project__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProjectReadV1"}, "type": "array", "title": "Response Get List Project Api V1 Project  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V1 Project"], "summary": "Create Project", "description": "Create new poject", "operationId": "create_project_api_v1_project__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectCreateV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/": {"get": {"tags": ["V1 Project"], "summary": "Read Project", "description": "Return info on an existing project", "operationId": "read_project_api_v1_project__project_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V1 Project"], "summary": "Delete Project", "description": "Delete project", "operationId": "delete_project_api_v1_project__project_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 Project"], "summary": "Update Project", "operationId": "update_project_api_v1_project__project_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/{workflow_id}/apply/": {"post": {"tags": ["V1 Project"], "summary": "Apply Workflow", "operationId": "apply_workflow_api_v1_project__project_id__workflow__workflow_id__apply__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Input Dataset Id"}, "name": "input_dataset_id", "in": "query"}, {"required": true, "schema": {"type": "integer", "title": "Output Dataset Id"}, "name": "output_dataset_id", "in": "query"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplyWorkflowCreateV1"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/task/": {"get": {"tags": ["V1 Task"], "summary": "Get List Task", "description": "Get list of available tasks", "operationId": "get_list_task_api_v1_task__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "Args Schema", "default": true}, "name": "args_schema", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TaskReadV1"}, "type": "array", "title": "Response Get List Task Api V1 Task  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V1 Task"], "summary": "Create Task", "description": "Create a new task", "operationId": "create_task_api_v1_task__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCreateV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/task/{task_id}/": {"get": {"tags": ["V1 Task"], "summary": "Get Task", "description": "Get info on a specific task", "operationId": "get_task_api_v1_task__task_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V1 Task"], "summary": "Delete Task", "description": "Delete a task", "operationId": "delete_task_api_v1_task__task_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 Task"], "summary": "Patch Task", "description": "Edit a specific task (restricted to superusers and task owner)", "operationId": "patch_task_api_v1_task__task_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/task/collect/pip/": {"post": {"tags": ["V1 Task Collection"], "summary": "Collect Tasks Pip", "description": "Task collection endpoint\n\nTrigger the creation of a dedicated virtual environment, the installation\nof a package and the collection of tasks as advertised in the manifest.", "operationId": "collect_tasks_pip_api_v1_task_collect_pip__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCollectPipV1"}}}, "required": true}, "responses": {"200": {"description": "Package already collected. Returning info on already available tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StateRead"}}}}, "201": {"description": "Task collection successfully started in the background"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/task/collect/{state_id}/": {"get": {"tags": ["V1 Task Collection"], "summary": "Check Collection Status", "description": "Check status of background task collection", "operationId": "check_collection_status_api_v1_task_collect__state_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "State Id"}, "name": "state_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Verbose", "default": false}, "name": "verbose", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StateRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/dataset/": {"get": {"tags": ["V1 Dataset"], "summary": "Read Dataset List", "description": "Get dataset list for given project", "operationId": "read_dataset_list_api_v1_project__project_id__dataset__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "History", "default": true}, "name": "history", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DatasetReadV1"}, "type": "array", "title": "Response Read Dataset List Api V1 Project  Project Id  Dataset  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V1 Dataset"], "summary": "Create Dataset", "description": "Add new dataset to current project", "operationId": "create_dataset_api_v1_project__project_id__dataset__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetCreateV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/dataset/{dataset_id}/": {"get": {"tags": ["V1 Dataset"], "summary": "Read Dataset", "description": "Get info on a dataset associated to the current project", "operationId": "read_dataset_api_v1_project__project_id__dataset__dataset_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V1 Dataset"], "summary": "Delete Dataset", "description": "Delete a dataset associated to the current project", "operationId": "delete_dataset_api_v1_project__project_id__dataset__dataset_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 Dataset"], "summary": "Update Dataset", "description": "Edit a dataset associated to the current project", "operationId": "update_dataset_api_v1_project__project_id__dataset__dataset_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/dataset/{dataset_id}/resource/": {"get": {"tags": ["V1 Dataset"], "summary": "Get Resource List", "description": "Get resources from a dataset", "operationId": "get_resource_list_api_v1_project__project_id__dataset__dataset_id__resource__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ResourceReadV1"}, "type": "array", "title": "Response Get Resource List Api V1 Project  Project Id  Dataset  Dataset Id  Resource  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V1 Dataset"], "summary": "Create Resource", "description": "Add resource to an existing dataset", "operationId": "create_resource_api_v1_project__project_id__dataset__dataset_id__resource__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceCreateV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/dataset/{dataset_id}/resource/{resource_id}/": {"delete": {"tags": ["V1 Dataset"], "summary": "Delete Resource", "description": "Delete a resource of a dataset", "operationId": "delete_resource_api_v1_project__project_id__dataset__dataset_id__resource__resource_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Resource Id"}, "name": "resource_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 Dataset"], "summary": "Update Resource", "description": "Edit a resource of a dataset", "operationId": "update_resource_api_v1_project__project_id__dataset__dataset_id__resource__resource_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Resource Id"}, "name": "resource_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/dataset/{dataset_id}/export_history/": {"get": {"tags": ["V1 Dataset"], "summary": "Export History As Workflow", "description": "Extract a reproducible workflow from the dataset history.", "operationId": "export_history_as_workflow_api_v1_project__project_id__dataset__dataset_id__export_history__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowExportV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/dataset/{dataset_id}/status/": {"get": {"tags": ["V1 Dataset"], "summary": "Get Workflowtask Status", "description": "Extract the status of all `WorkflowTask`s that ran on a given `Dataset`.", "operationId": "get_workflowtask_status_api_v1_project__project_id__dataset__dataset_id__status__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetStatusReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/dataset/": {"get": {"tags": ["V1 Dataset"], "summary": "Get User Datasets", "description": "Returns all the datasets of the current user", "operationId": "get_user_datasets_api_v1_dataset__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "History", "default": true}, "name": "history", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DatasetReadV1"}, "type": "array", "title": "Response Get User Datasets Api V1 Dataset  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/": {"get": {"tags": ["V1 Workflow"], "summary": "Get Workflow List", "description": "Get workflow list for given project", "operationId": "get_workflow_list_api_v1_project__project_id__workflow__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkflowReadV1"}, "type": "array", "title": "Response Get Workflow List Api V1 Project  Project Id  Workflow  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V1 Workflow"], "summary": "Create Workflow", "description": "Create a workflow, associate to a project", "operationId": "create_workflow_api_v1_project__project_id__workflow__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowCreateV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/{workflow_id}/": {"get": {"tags": ["V1 Workflow"], "summary": "Read Workflow", "description": "Get info on an existing workflow", "operationId": "read_workflow_api_v1_project__project_id__workflow__workflow_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V1 Workflow"], "summary": "Delete Workflow", "description": "Delete a workflow", "operationId": "delete_workflow_api_v1_project__project_id__workflow__workflow_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 Workflow"], "summary": "Update Workflow", "description": "Edit a workflow", "operationId": "update_workflow_api_v1_project__project_id__workflow__workflow_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/{workflow_id}/export/": {"get": {"tags": ["V1 Workflow"], "summary": "Export Worfklow", "description": "Export an existing workflow, after stripping all IDs", "operationId": "export_worfklow_api_v1_project__project_id__workflow__workflow_id__export__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowExportV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/import/": {"post": {"tags": ["V1 Workflow"], "summary": "Import Workflow", "description": "Import an existing workflow into a project\n\nAlso create all required objects (i.e. Workflow and WorkflowTask's) along\nthe way.", "operationId": "import_workflow_api_v1_project__project_id__workflow_import__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowImportV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/workflow/": {"get": {"tags": ["V1 Workflow"], "summary": "Get User Workflows", "description": "Returns all the workflows of the current user", "operationId": "get_user_workflows_api_v1_workflow__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkflowReadV1"}, "type": "array", "title": "Response Get User Workflows Api V1 Workflow  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/{workflow_id}/wftask/": {"post": {"tags": ["V1 WorkflowTask"], "summary": "Create Workflowtask", "description": "Add a WorkflowTask to a Workflow", "operationId": "create_workflowtask_api_v1_project__project_id__workflow__workflow_id__wftask__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "query"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskCreateV1"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/{workflow_id}/wftask/{workflow_task_id}/": {"get": {"tags": ["V1 WorkflowTask"], "summary": "Read Workflowtask", "operationId": "read_workflowtask_api_v1_project__project_id__workflow__workflow_id__wftask__workflow_task_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}, "name": "workflow_task_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V1 WorkflowTask"], "summary": "Delete Workflowtask", "description": "Delete a WorkflowTask of a Workflow", "operationId": "delete_workflowtask_api_v1_project__project_id__workflow__workflow_id__wftask__workflow_task_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}, "name": "workflow_task_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 WorkflowTask"], "summary": "Update Workflowtask", "description": "Edit a WorkflowTask of a Workflow", "operationId": "update_workflowtask_api_v1_project__project_id__workflow__workflow_id__wftask__workflow_task_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}, "name": "workflow_task_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/job/": {"get": {"tags": ["V1 Job"], "summary": "Get User Jobs", "description": "Returns all the jobs of the current user", "operationId": "get_user_jobs_api_v1_job__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "Log", "default": true}, "name": "log", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}, "type": "array", "title": "Response Get User Jobs Api V1 Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/workflow/{workflow_id}/job/": {"get": {"tags": ["V1 Job"], "summary": "Get Workflow Jobs", "description": "Returns all the jobs related to a specific workflow", "operationId": "get_workflow_jobs_api_v1_project__project_id__workflow__workflow_id__job__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}, "type": "array", "title": "Response Get Workflow Jobs Api V1 Project  Project Id  Workflow  Workflow Id  Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/job/{job_id}/": {"get": {"tags": ["V1 Job"], "summary": "Read Job", "description": "Return info on an existing job", "operationId": "read_job_api_v1_project__project_id__job__job_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Show Tmp Logs", "default": false}, "name": "show_tmp_logs", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/job/{job_id}/download/": {"get": {"tags": ["V1 Job"], "summary": "Download Job Logs", "description": "Download job folder", "operationId": "download_job_logs_api_v1_project__project_id__job__job_id__download__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/job/": {"get": {"tags": ["V1 Job"], "summary": "Get Job List", "description": "Get job list for given project", "operationId": "get_job_list_api_v1_project__project_id__job__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Log", "default": true}, "name": "log", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}, "type": "array", "title": "Response Get Job List Api V1 Project  Project Id  Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v1/project/{project_id}/job/{job_id}/stop/": {"get": {"tags": ["V1 Job"], "summary": "Stop Job", "description": "Stop execution of a workflow job (only available for slurm backend)", "operationId": "stop_job_api_v1_project__project_id__job__job_id__stop__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/": {"get": {"tags": ["V2 Dataset"], "summary": "Read Dataset List", "description": "Get dataset list for given project", "operationId": "read_dataset_list_api_v2_project__project_id__dataset__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "History", "default": true}, "name": "history", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DatasetReadV2"}, "type": "array", "title": "Response Read Dataset List Api V2 Project  Project Id  Dataset  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V2 Dataset"], "summary": "Create Dataset", "description": "Add new dataset to current project", "operationId": "create_dataset_api_v2_project__project_id__dataset__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetCreateV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/": {"get": {"tags": ["V2 Dataset"], "summary": "Read Dataset", "description": "Get info on a dataset associated to the current project", "operationId": "read_dataset_api_v2_project__project_id__dataset__dataset_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V2 Dataset"], "summary": "Delete Dataset", "description": "Delete a dataset associated to the current project", "operationId": "delete_dataset_api_v2_project__project_id__dataset__dataset_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 Dataset"], "summary": "Update Dataset", "description": "Edit a dataset associated to the current project", "operationId": "update_dataset_api_v2_project__project_id__dataset__dataset_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetUpdateV2"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/dataset/": {"get": {"tags": ["V2 Dataset"], "summary": "Get User Datasets", "description": "Returns all the datasets of the current user", "operationId": "get_user_datasets_api_v2_dataset__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "History", "default": true}, "name": "history", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DatasetReadV2"}, "type": "array", "title": "Response Get User Datasets Api V2 Dataset  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/export/": {"get": {"tags": ["V2 Dataset"], "summary": "Export Dataset", "description": "Export an existing dataset", "operationId": "export_dataset_api_v2_project__project_id__dataset__dataset_id__export__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetExportV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/import/": {"post": {"tags": ["V2 Dataset"], "summary": "Import Dataset", "description": "Import an existing dataset into a project", "operationId": "import_dataset_api_v2_project__project_id__dataset_import__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetImportV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DatasetReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/job/": {"get": {"tags": ["V2 Job"], "summary": "Get User Jobs", "description": "Returns all the jobs of the current user", "operationId": "get_user_jobs_api_v2_job__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "Log", "default": true}, "name": "log", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/JobReadV2"}, "type": "array", "title": "Response Get User Jobs Api V2 Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/job/": {"get": {"tags": ["V2 Job"], "summary": "Get Workflow Jobs", "description": "Returns all the jobs related to a specific workflow", "operationId": "get_workflow_jobs_api_v2_project__project_id__workflow__workflow_id__job__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/JobReadV2"}, "type": "array", "title": "Response Get Workflow Jobs Api V2 Project  Project Id  Workflow  Workflow Id  Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/job/{job_id}/": {"get": {"tags": ["V2 Job"], "summary": "Read Job", "description": "Return info on an existing job", "operationId": "read_job_api_v2_project__project_id__job__job_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Show Tmp Logs", "default": false}, "name": "show_tmp_logs", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/job/{job_id}/download/": {"get": {"tags": ["V2 Job"], "summary": "Download Job Logs", "description": "Download job folder", "operationId": "download_job_logs_api_v2_project__project_id__job__job_id__download__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/job/": {"get": {"tags": ["V2 Job"], "summary": "Get Job List", "description": "Get job list for given project", "operationId": "get_job_list_api_v2_project__project_id__job__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Log", "default": true}, "name": "log", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/JobReadV2"}, "type": "array", "title": "Response Get Job List Api V2 Project  Project Id  Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/job/{job_id}/stop/": {"get": {"tags": ["V2 Job"], "summary": "Stop Job", "description": "Stop execution of a workflow job (only available for slurm backend)", "operationId": "stop_job_api_v2_project__project_id__job__job_id__stop__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/images/": {"post": {"tags": ["V2 Images"], "summary": "Post New Image", "operationId": "post_new_image_api_v2_project__project_id__dataset__dataset_id__images__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleImage"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V2 Images"], "summary": "Delete Dataset Images", "operationId": "delete_dataset_images_api_v2_project__project_id__dataset__dataset_id__images__delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}, {"required": true, "schema": {"type": "string", "title": "Zarr Url"}, "name": "zarr_url", "in": "query"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 Images"], "summary": "Patch Dataset Image", "operationId": "patch_dataset_image_api_v2_project__project_id__dataset__dataset_id__images__patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleImageUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleImage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/dataset/{dataset_id}/images/query/": {"post": {"tags": ["V2 Images"], "summary": "Query Dataset Images", "operationId": "query_dataset_images_api_v2_project__project_id__dataset__dataset_id__images_query__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Use Dataset Filters", "default": false}, "name": "use_dataset_filters", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Page", "default": 1}, "name": "page", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Page Size"}, "name": "page_size", "in": "query"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageQuery"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImagePage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/": {"get": {"tags": ["V2 Project"], "summary": "Get List Project", "description": "Return list of projects user is member of", "operationId": "get_list_project_api_v2_project__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProjectReadV2"}, "type": "array", "title": "Response Get List Project Api V2 Project  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V2 Project"], "summary": "Create Project", "description": "Create new poject", "operationId": "create_project_api_v2_project__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectCreateV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/": {"get": {"tags": ["V2 Project"], "summary": "Read Project", "description": "Return info on an existing project", "operationId": "read_project_api_v2_project__project_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V2 Project"], "summary": "Delete Project", "description": "Delete project", "operationId": "delete_project_api_v2_project__project_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 Project"], "summary": "Update Project", "operationId": "update_project_api_v2_project__project_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectUpdateV2"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProjectReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/job/submit/": {"post": {"tags": ["V2 Job"], "summary": "Apply Workflow", "operationId": "apply_workflow_api_v2_project__project_id__job_submit__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "query"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "query"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobCreateV2"}}}, "required": true}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/task/collect/pip/": {"post": {"tags": ["V2 Task Collection"], "summary": "Collect Tasks Pip", "description": "Task collection endpoint\n\nTrigger the creation of a dedicated virtual environment, the installation\nof a package and the collection of tasks as advertised in the manifest.", "operationId": "collect_tasks_pip_api_v2_task_collect_pip__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCollectPipV2"}}}, "required": true}, "responses": {"200": {"description": "Package already collected. Returning info on already available tasks", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StateRead"}}}}, "201": {"description": "Task collection successfully started in the background"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/task/collect/{state_id}/": {"get": {"tags": ["V2 Task Collection"], "summary": "Check Collection Status", "description": "Check status of background task collection", "operationId": "check_collection_status_api_v2_task_collect__state_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "State Id"}, "name": "state_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Verbose", "default": false}, "name": "verbose", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StateRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/task/": {"get": {"tags": ["V2 Task"], "summary": "Get List Task", "description": "Get list of available tasks", "operationId": "get_list_task_api_v2_task__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "Args Schema Parallel", "default": true}, "name": "args_schema_parallel", "in": "query"}, {"required": false, "schema": {"type": "boolean", "title": "Args Schema Non Parallel", "default": true}, "name": "args_schema_non_parallel", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TaskReadV2"}, "type": "array", "title": "Response Get List Task Api V2 Task  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V2 Task"], "summary": "Create Task", "description": "Create a new task", "operationId": "create_task_api_v2_task__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCreateV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/task/{task_id}/": {"get": {"tags": ["V2 Task"], "summary": "Get Task", "description": "Get info on a specific task", "operationId": "get_task_api_v2_task__task_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V2 Task"], "summary": "Delete Task", "description": "Delete a task", "operationId": "delete_task_api_v2_task__task_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 Task"], "summary": "Patch Task", "description": "Edit a specific task (restricted to superusers and task owner)", "operationId": "patch_task_api_v2_task__task_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskUpdateV2"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/task-legacy/": {"get": {"tags": ["V2 Task Legacy"], "summary": "Get List Task Legacy", "description": "Get list of available legacy tasks", "operationId": "get_list_task_legacy_api_v2_task_legacy__get", "parameters": [{"required": false, "schema": {"type": "boolean", "title": "Args Schema", "default": true}, "name": "args_schema", "in": "query"}, {"required": false, "schema": {"type": "boolean", "title": "Only V2 Compatible", "default": false}, "name": "only_v2_compatible", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TaskLegacyReadV2"}, "type": "array", "title": "Response Get List Task Legacy Api V2 Task Legacy  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/task-legacy/{task_id}/": {"get": {"tags": ["V2 Task Legacy"], "summary": "Get Task Legacy", "description": "Get info on a specific legacy task", "operationId": "get_task_legacy_api_v2_task_legacy__task_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskLegacyReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/": {"get": {"tags": ["V2 Workflow"], "summary": "Get Workflow List", "description": "Get workflow list for given project", "operationId": "get_workflow_list_api_v2_project__project_id__workflow__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkflowReadV2"}, "type": "array", "title": "Response Get Workflow List Api V2 Project  Project Id  Workflow  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "post": {"tags": ["V2 Workflow"], "summary": "Create Workflow", "description": "Create a workflow, associate to a project", "operationId": "create_workflow_api_v2_project__project_id__workflow__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowCreateV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/": {"get": {"tags": ["V2 Workflow"], "summary": "Read Workflow", "description": "Get info on an existing workflow", "operationId": "read_workflow_api_v2_project__project_id__workflow__workflow_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V2 Workflow"], "summary": "Delete Workflow", "description": "Delete a workflow", "operationId": "delete_workflow_api_v2_project__project_id__workflow__workflow_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 Workflow"], "summary": "Update Workflow", "description": "Edit a workflow", "operationId": "update_workflow_api_v2_project__project_id__workflow__workflow_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowUpdateV2"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/export/": {"get": {"tags": ["V2 Workflow"], "summary": "Export Worfklow", "description": "Export an existing workflow, after stripping all IDs", "operationId": "export_worfklow_api_v2_project__project_id__workflow__workflow_id__export__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowExportV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/import/": {"post": {"tags": ["V2 Workflow"], "summary": "Import Workflow", "description": "Import an existing workflow into a project\n\nAlso create all required objects (i.e. Workflow and WorkflowTask's) along\nthe way.", "operationId": "import_workflow_api_v2_project__project_id__workflow_import__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowImportV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/workflow/": {"get": {"tags": ["V2 Workflow"], "summary": "Get User Workflows", "description": "Returns all the workflows of the current user", "operationId": "get_user_workflows_api_v2_workflow__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkflowReadV2"}, "type": "array", "title": "Response Get User Workflows Api V2 Workflow  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/wftask/": {"post": {"tags": ["V2 WorkflowTask"], "summary": "Create Workflowtask", "description": "Add a WorkflowTask to a Workflow", "operationId": "create_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__post", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "query"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskCreateV2"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/workflow/{workflow_id}/wftask/{workflow_task_id}/": {"get": {"tags": ["V2 WorkflowTask"], "summary": "Read Workflowtask", "operationId": "read_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__workflow_task_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}, "name": "workflow_task_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "delete": {"tags": ["V2 WorkflowTask"], "summary": "Delete Workflowtask", "description": "Delete a WorkflowTask of a Workflow", "operationId": "delete_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__workflow_task_id___delete", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}, "name": "workflow_task_id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 WorkflowTask"], "summary": "Update Workflowtask", "description": "Edit a WorkflowTask of a Workflow", "operationId": "update_workflowtask_api_v2_project__project_id__workflow__workflow_id__wftask__workflow_task_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Task Id"}, "name": "workflow_task_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskUpdateV2"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/api/v2/project/{project_id}/status/": {"get": {"tags": ["V2 Status"], "summary": "Get Workflowtask Status", "description": "Extract the status of all `WorkflowTaskV2` of a given `WorkflowV2` that ran\non a given `DatasetV2`.\n\n*NOTE*: the current endpoint is not guaranteed to provide consistent\nresults if the workflow task list is modified in a non-trivial way\n(that is, by adding intermediate tasks, removing tasks, or changing their\norder). See fractal-server GitHub issues: 793, 1083.", "operationId": "get_workflowtask_status_api_v2_project__project_id__status__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "path"}, {"required": true, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "query"}, {"required": true, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StatusReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/project/": {"get": {"tags": ["V1 Admin area"], "summary": "View Project", "description": "Query `project` table.\n\nArgs:\n    id: If not `None`, select a given `project.id`.\n    user_id: If not `None`, select a given `project.user_id`.", "operationId": "view_project_admin_v1_project__get", "parameters": [{"required": false, "schema": {"type": "integer", "title": "Id"}, "name": "id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "User Id"}, "name": "user_id", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Timestamp Created Min"}, "name": "timestamp_created_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Timestamp Created Max"}, "name": "timestamp_created_max", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProjectReadV1"}, "type": "array", "title": "Response View Project Admin V1 Project  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/workflow/": {"get": {"tags": ["V1 Admin area"], "summary": "View Workflow", "description": "Query `workflow` table.\n\nArgs:\n    id: If not `None`, select a given `workflow.id`.\n    project_id: If not `None`, select a given `workflow.project_id`.\n    name_contains: If not `None`, select workflows such that their\n        `name` attribute contains `name_contains` (case-insensitive).", "operationId": "view_workflow_admin_v1_workflow__get", "parameters": [{"required": false, "schema": {"type": "integer", "title": "Id"}, "name": "id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "User Id"}, "name": "user_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "Name Contains"}, "name": "name_contains", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Timestamp Created Min"}, "name": "timestamp_created_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Timestamp Created Max"}, "name": "timestamp_created_max", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/WorkflowReadV1"}, "type": "array", "title": "Response View Workflow Admin V1 Workflow  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/dataset/": {"get": {"tags": ["V1 Admin area"], "summary": "View Dataset", "description": "Query `dataset` table.\n\nArgs:\n    id: If not `None`, select a given `dataset.id`.\n    project_id: If not `None`, select a given `dataset.project_id`.\n    name_contains: If not `None`, select datasets such that their\n        `name` attribute contains `name_contains` (case-insensitive).\n    type: If not `None`, select a given `dataset.type`.", "operationId": "view_dataset_admin_v1_dataset__get", "parameters": [{"required": false, "schema": {"type": "integer", "title": "Id"}, "name": "id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "User Id"}, "name": "user_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "Name Contains"}, "name": "name_contains", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "Type"}, "name": "type", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Timestamp Created Min"}, "name": "timestamp_created_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Timestamp Created Max"}, "name": "timestamp_created_max", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/DatasetReadV1"}, "type": "array", "title": "Response View Dataset Admin V1 Dataset  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/job/": {"get": {"tags": ["V1 Admin area"], "summary": "View Job", "description": "Query `ApplyWorkflow` table.\n\nArgs:\n    id: If not `None`, select a given `applyworkflow.id`.\n    project_id: If not `None`, select a given `applyworkflow.project_id`.\n    input_dataset_id: If not `None`, select a given\n        `applyworkflow.input_dataset_id`.\n    output_dataset_id: If not `None`, select a given\n        `applyworkflow.output_dataset_id`.\n    workflow_id: If not `None`, select a given `applyworkflow.workflow_id`.\n    status: If not `None`, select a given `applyworkflow.status`.\n    start_timestamp_min: If not `None`, select a rows with\n        `start_timestamp` after `start_timestamp_min`.\n    start_timestamp_max: If not `None`, select a rows with\n        `start_timestamp` before `start_timestamp_min`.\n    end_timestamp_min: If not `None`, select a rows with `end_timestamp`\n        after `end_timestamp_min`.\n    end_timestamp_max: If not `None`, select a rows with `end_timestamp`\n        before `end_timestamp_min`.\n    log: If `True`, include `job.log`, if `False`\n        `job.log` is set to `None`.", "operationId": "view_job_admin_v1_job__get", "parameters": [{"required": false, "schema": {"type": "integer", "title": "Id"}, "name": "id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "User Id"}, "name": "user_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Input Dataset Id"}, "name": "input_dataset_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Output Dataset Id"}, "name": "output_dataset_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "query"}, {"required": false, "schema": {"$ref": "#/components/schemas/JobStatusTypeV1"}, "name": "status", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Timestamp Min"}, "name": "start_timestamp_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Timestamp Max"}, "name": "start_timestamp_max", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "End Timestamp Min"}, "name": "end_timestamp_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "End Timestamp Max"}, "name": "end_timestamp_max", "in": "query"}, {"required": false, "schema": {"type": "boolean", "title": "Log", "default": true}, "name": "log", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}, "type": "array", "title": "Response View Job Admin V1 Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/job/{job_id}/": {"get": {"tags": ["V1 Admin area"], "summary": "View Single Job", "operationId": "view_single_job_admin_v1_job__job_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Show Tmp Logs", "default": false}, "name": "show_tmp_logs", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V1 Admin area"], "summary": "Update Job", "description": "Change the status of an existing job.\n\nThis endpoint is only open to superusers, and it does not apply\nproject-based access-control to jobs.", "operationId": "update_job_admin_v1_job__job_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplyWorkflowUpdateV1"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplyWorkflowReadV1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/job/{job_id}/stop/": {"get": {"tags": ["V1 Admin area"], "summary": "Stop Job", "description": "Stop execution of a workflow job.\n\nOnly available for slurm backend.", "operationId": "stop_job_admin_v1_job__job_id__stop__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v1/job/{job_id}/download/": {"get": {"tags": ["V1 Admin area"], "summary": "Download Job Logs", "description": "Download job folder", "operationId": "download_job_logs_admin_v1_job__job_id__download__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/project/": {"get": {"tags": ["V2 Admin area"], "summary": "View Project", "description": "Query `ProjectV2` table.\n\nArgs:\n    id: If not `None`, select a given `project.id`.\n    user_id: If not `None`, select a given `project.user_id`.", "operationId": "view_project_admin_v2_project__get", "parameters": [{"required": false, "schema": {"type": "integer", "title": "Id"}, "name": "id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "User Id"}, "name": "user_id", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProjectReadV2"}, "type": "array", "title": "Response View Project Admin V2 Project  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/job/": {"get": {"tags": ["V2 Admin area"], "summary": "View Job", "description": "Query `ApplyWorkflow` table.\n\nArgs:\n    id: If not `None`, select a given `applyworkflow.id`.\n    project_id: If not `None`, select a given `applyworkflow.project_id`.\n    dataset_id: If not `None`, select a given\n        `applyworkflow.input_dataset_id`.\n    workflow_id: If not `None`, select a given `applyworkflow.workflow_id`.\n    status: If not `None`, select a given `applyworkflow.status`.\n    start_timestamp_min: If not `None`, select a rows with\n        `start_timestamp` after `start_timestamp_min`.\n    start_timestamp_max: If not `None`, select a rows with\n        `start_timestamp` before `start_timestamp_min`.\n    end_timestamp_min: If not `None`, select a rows with `end_timestamp`\n        after `end_timestamp_min`.\n    end_timestamp_max: If not `None`, select a rows with `end_timestamp`\n        before `end_timestamp_min`.\n    log: If `True`, include `job.log`, if `False`\n        `job.log` is set to `None`.", "operationId": "view_job_admin_v2_job__get", "parameters": [{"required": false, "schema": {"type": "integer", "title": "Id"}, "name": "id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "User Id"}, "name": "user_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Project Id"}, "name": "project_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Dataset Id"}, "name": "dataset_id", "in": "query"}, {"required": false, "schema": {"type": "integer", "title": "Workflow Id"}, "name": "workflow_id", "in": "query"}, {"required": false, "schema": {"$ref": "#/components/schemas/JobStatusTypeV2"}, "name": "status", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Timestamp Min"}, "name": "start_timestamp_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "Start Timestamp Max"}, "name": "start_timestamp_max", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "End Timestamp Min"}, "name": "end_timestamp_min", "in": "query"}, {"required": false, "schema": {"type": "string", "format": "date-time", "title": "End Timestamp Max"}, "name": "end_timestamp_max", "in": "query"}, {"required": false, "schema": {"type": "boolean", "title": "Log", "default": true}, "name": "log", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/JobReadV2"}, "type": "array", "title": "Response View Job Admin V2 Job  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/job/{job_id}/": {"get": {"tags": ["V2 Admin area"], "summary": "View Single Job", "operationId": "view_single_job_admin_v2_job__job_id___get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}, {"required": false, "schema": {"type": "boolean", "title": "Show Tmp Logs", "default": false}, "name": "show_tmp_logs", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["V2 Admin area"], "summary": "Update Job", "description": "Change the status of an existing job.\n\nThis endpoint is only open to superusers, and it does not apply\nproject-based access-control to jobs.", "operationId": "update_job_admin_v2_job__job_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobUpdateV2"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobReadV2"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/job/{job_id}/stop/": {"get": {"tags": ["V2 Admin area"], "summary": "Stop Job", "description": "Stop execution of a workflow job.\n\nOnly available for slurm backend.", "operationId": "stop_job_admin_v2_job__job_id__stop__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/job/{job_id}/download/": {"get": {"tags": ["V2 Admin area"], "summary": "Download Job Logs", "description": "Download job folder", "operationId": "download_job_logs_admin_v2_job__job_id__download__get", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Job Id"}, "name": "job_id", "in": "path"}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/admin/v2/task-v1/{task_id}/": {"patch": {"tags": ["V2 Admin area"], "summary": "Flag Task V1 As V2 Compatible", "operationId": "flag_task_v1_as_v2_compatible_admin_v2_task_v1__task_id___patch", "parameters": [{"required": true, "schema": {"type": "integer", "title": "Task Id"}, "name": "task_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCompatibility"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/token/login/": {"post": {"tags": ["Authentication"], "summary": "Auth:Bearer-Jwt.Login", "operationId": "auth_bearer_jwt_login_auth_token_login__post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_auth_bearer_jwt_login_auth_token_login__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BearerResponse"}, "example": {"access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI", "token_type": "bearer"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"LOGIN_BAD_CREDENTIALS": {"summary": "Bad credentials or the user is inactive.", "value": {"detail": "LOGIN_BAD_CREDENTIALS"}}, "LOGIN_USER_NOT_VERIFIED": {"summary": "The user is not verified.", "value": {"detail": "LOGIN_USER_NOT_VERIFIED"}}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/token/logout/": {"post": {"tags": ["Authentication"], "summary": "Auth:Bearer-Jwt.Logout", "operationId": "auth_bearer_jwt_logout_auth_token_logout__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Missing token or inactive user."}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/login/": {"post": {"tags": ["Authentication"], "summary": "Auth:Cookie-Jwt.Login", "operationId": "auth_cookie_jwt_login_auth_login__post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_auth_cookie_jwt_login_auth_login__post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"LOGIN_BAD_CREDENTIALS": {"summary": "Bad credentials or the user is inactive.", "value": {"detail": "LOGIN_BAD_CREDENTIALS"}}, "LOGIN_USER_NOT_VERIFIED": {"summary": "The user is not verified.", "value": {"detail": "LOGIN_USER_NOT_VERIFIED"}}}}}}, "204": {"description": "No Content"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/logout/": {"post": {"tags": ["Authentication"], "summary": "Auth:Cookie-Jwt.Logout", "operationId": "auth_cookie_jwt_logout_auth_logout__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Missing token or inactive user."}, "204": {"description": "No Content"}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/register/": {"post": {"tags": ["Authentication"], "summary": "Register:Register", "operationId": "register_register_auth_register__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"REGISTER_USER_ALREADY_EXISTS": {"summary": "A user with this email already exists.", "value": {"detail": "REGISTER_USER_ALREADY_EXISTS"}}, "REGISTER_INVALID_PASSWORD": {"summary": "Password validation failed.", "value": {"detail": {"code": "REGISTER_INVALID_PASSWORD", "reason": "Password should beat least 3 characters"}}}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/users/{id}/": {"get": {"tags": ["Authentication"], "summary": "Users:User", "operationId": "users_user_auth_users__id___get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Id"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "401": {"description": "Missing token or inactive user."}, "403": {"description": "Not a superuser."}, "404": {"description": "The user does not exist."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["Authentication"], "summary": "Users:Patch User", "operationId": "users_patch_user_auth_users__id___patch", "parameters": [{"required": true, "schema": {"type": "string", "title": "Id"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "401": {"description": "Missing token or inactive user."}, "403": {"description": "Not a superuser."}, "404": {"description": "The user does not exist."}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"UPDATE_USER_EMAIL_ALREADY_EXISTS": {"summary": "A user with this email already exists.", "value": {"detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"}}, "UPDATE_USER_INVALID_PASSWORD": {"summary": "Password validation failed.", "value": {"detail": {"code": "UPDATE_USER_INVALID_PASSWORD", "reason": "Password should beat least 3 characters"}}}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/current-user/": {"get": {"tags": ["Authentication"], "summary": "Get Current User", "description": "Return current user", "operationId": "get_current_user_auth_current_user__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}, "patch": {"tags": ["Authentication"], "summary": "Patch Current User", "operationId": "patch_current_user_auth_current_user__patch", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateStrict"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/users/": {"get": {"tags": ["Authentication"], "summary": "List Users", "description": "Return list of all users", "operationId": "list_users_auth_users__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/UserRead"}, "type": "array", "title": "Response List Users Auth Users  Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}, {"APIKeyCookie": []}]}}, "/auth/oauth2example/authorize/": {"get": {"tags": ["Authentication"], "summary": "Oauth:Openid.Cookie-Jwt.Authorize", "operationId": "oauth_openid_cookie_jwt_authorize_auth_oauth2example_authorize__get", "parameters": [{"required": false, "schema": {"items": {"type": "string"}, "type": "array", "title": "Scopes"}, "name": "scopes", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OAuth2AuthorizeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/oauth2example/callback/": {"get": {"tags": ["Authentication"], "summary": "Oauth:Openid.Cookie-Jwt.Callback", "description": "The response varies based on the authentication backend used.", "operationId": "oauth_openid_cookie_jwt_callback_auth_oauth2example_callback__get", "parameters": [{"required": false, "schema": {"type": "string", "title": "Code"}, "name": "code", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "Code Verifier"}, "name": "code_verifier", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "State"}, "name": "state", "in": "query"}, {"required": false, "schema": {"type": "string", "title": "Error"}, "name": "error", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorModel"}, "examples": {"INVALID_STATE_TOKEN": {"summary": "Invalid state token."}, "LOGIN_BAD_CREDENTIALS": {"summary": "User is inactive.", "value": {"detail": "LOGIN_BAD_CREDENTIALS"}}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"ApplyWorkflowCreateV1": {"properties": {"worker_init": {"type": "string", "title": "Worker Init"}, "first_task_index": {"type": "integer", "title": "First Task Index"}, "last_task_index": {"type": "integer", "title": "Last Task Index"}, "slurm_account": {"type": "string", "title": "Slurm Account"}}, "type": "object", "title": "ApplyWorkflowCreateV1", "description": "Class for `ApplyWorkflow` creation.\n\nAttributes:\n    first_task_index:\n    last_task_index:\n    slurm_account:"}, "ApplyWorkflowReadV1": {"properties": {"worker_init": {"type": "string", "title": "Worker Init"}, "id": {"type": "integer", "title": "Id"}, "project_id": {"type": "integer", "title": "Project Id"}, "project_dump": {"$ref": "#/components/schemas/ProjectDumpV1"}, "user_email": {"type": "string", "title": "User Email"}, "slurm_account": {"type": "string", "title": "Slurm Account"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "workflow_dump": {"$ref": "#/components/schemas/WorkflowDumpV1"}, "input_dataset_id": {"type": "integer", "title": "Input Dataset Id"}, "input_dataset_dump": {"$ref": "#/components/schemas/DatasetDumpV1"}, "output_dataset_id": {"type": "integer", "title": "Output Dataset Id"}, "output_dataset_dump": {"$ref": "#/components/schemas/DatasetDumpV1"}, "start_timestamp": {"type": "string", "format": "date-time", "title": "Start Timestamp"}, "end_timestamp": {"type": "string", "format": "date-time", "title": "End Timestamp"}, "status": {"type": "string", "title": "Status"}, "log": {"type": "string", "title": "Log"}, "working_dir": {"type": "string", "title": "Working Dir"}, "working_dir_user": {"type": "string", "title": "Working Dir User"}, "first_task_index": {"type": "integer", "title": "First Task Index"}, "last_task_index": {"type": "integer", "title": "Last Task Index"}}, "type": "object", "required": ["id", "project_dump", "user_email", "workflow_dump", "input_dataset_dump", "output_dataset_dump", "start_timestamp", "status"], "title": "ApplyWorkflowReadV1", "description": "Class for `ApplyWorkflow` read from database.\n\nAttributes:\n    id:\n    project_id:\n    project_dump:\n    user_email:\n    slurm_account:\n    workflow_id:\n    workflow_dump:\n    input_dataset_id:\n    input_dataset_dump:\n    output_dataset_id:\n    output_dataset_dump:\n    start_timestamp:\n    end_timestamp:\n    status:\n    log:\n    working_dir:\n    working_dir_user:\n    first_task_index:\n    last_task_index:"}, "ApplyWorkflowUpdateV1": {"properties": {"status": {"$ref": "#/components/schemas/JobStatusTypeV1"}}, "type": "object", "required": ["status"], "title": "ApplyWorkflowUpdateV1", "description": "Class for updating a job status.\n\nAttributes:\n    status: New job status."}, "BearerResponse": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}}, "type": "object", "required": ["access_token", "token_type"], "title": "BearerResponse"}, "Body_auth_bearer_jwt_login_auth_token_login__post": {"properties": {"grant_type": {"type": "string", "pattern": "password", "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"type": "string", "title": "Client Id"}, "client_secret": {"type": "string", "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_auth_bearer_jwt_login_auth_token_login__post"}, "Body_auth_cookie_jwt_login_auth_login__post": {"properties": {"grant_type": {"type": "string", "pattern": "password", "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"type": "string", "title": "Client Id"}, "client_secret": {"type": "string", "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_auth_cookie_jwt_login_auth_login__post"}, "DatasetCreateV1": {"properties": {"name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "meta": {"type": "object", "title": "Meta", "default": {}}, "history": {"items": {"$ref": "#/components/schemas/_DatasetHistoryItemV1"}, "type": "array", "title": "History", "default": []}, "read_only": {"type": "boolean", "title": "Read Only", "default": false}}, "type": "object", "required": ["name"], "title": "DatasetCreateV1", "description": "Class for `Dataset` creation."}, "DatasetCreateV2": {"properties": {"name": {"type": "string", "title": "Name"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "additionalProperties": false, "type": "object", "required": ["name", "zarr_dir"], "title": "DatasetCreateV2"}, "DatasetDumpV1": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "read_only": {"type": "boolean", "title": "Read Only"}, "resource_list": {"items": {"$ref": "#/components/schemas/ResourceDumpV1"}, "type": "array", "title": "Resource List"}, "project_id": {"type": "integer", "title": "Project Id"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "read_only", "resource_list", "project_id", "timestamp_created"], "title": "DatasetDumpV1"}, "DatasetDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "type": "object", "required": ["id", "name", "project_id", "timestamp_created", "zarr_dir", "filters"], "title": "DatasetDumpV2"}, "DatasetExportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "images": {"items": {"$ref": "#/components/schemas/SingleImage"}, "type": "array", "title": "Images"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "type": "object", "required": ["name", "zarr_dir", "images", "filters"], "title": "DatasetExportV2", "description": "Class for `Dataset` export.\n\nAttributes:\n    name:\n    zarr_dir:\n    images:\n    filters:"}, "DatasetImportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "images": {"items": {"$ref": "#/components/schemas/SingleImage"}, "type": "array", "title": "Images"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "additionalProperties": false, "type": "object", "required": ["name", "zarr_dir"], "title": "DatasetImportV2", "description": "Class for `Dataset` import.\n\nAttributes:\n    name:\n    zarr_dir:\n    images:\n    filters:"}, "DatasetReadV1": {"properties": {"name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "meta": {"type": "object", "title": "Meta", "default": {}}, "history": {"items": {"$ref": "#/components/schemas/_DatasetHistoryItemV1"}, "type": "array", "title": "History", "default": []}, "read_only": {"type": "boolean", "title": "Read Only"}, "id": {"type": "integer", "title": "Id"}, "resource_list": {"items": {"$ref": "#/components/schemas/ResourceReadV1"}, "type": "array", "title": "Resource List"}, "project_id": {"type": "integer", "title": "Project Id"}, "project": {"$ref": "#/components/schemas/ProjectReadV1"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}}, "type": "object", "required": ["name", "read_only", "id", "resource_list", "project_id", "project", "timestamp_created"], "title": "DatasetReadV1", "description": "Class for `Dataset` read from database.\n\nAttributes:\n    id:\n    read_only:\n    resource_list:\n    project_id:\n    project:"}, "DatasetReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "project": {"$ref": "#/components/schemas/ProjectReadV2"}, "history": {"items": {"$ref": "#/components/schemas/_DatasetHistoryItemV2"}, "type": "array", "title": "History"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "type": "object", "required": ["id", "name", "project_id", "project", "history", "timestamp_created", "zarr_dir"], "title": "DatasetReadV2"}, "DatasetStatusReadV1": {"properties": {"status": {"additionalProperties": {"$ref": "#/components/schemas/WorkflowTaskStatusTypeV1"}, "type": "object"}}, "type": "object", "title": "DatasetStatusReadV1", "description": "Response type for the\n`/project/{project_id}/dataset/{dataset_id}/status/` endpoint"}, "DatasetUpdateV1": {"properties": {"name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "meta": {"type": "object", "title": "Meta"}, "history": {"items": {"$ref": "#/components/schemas/_DatasetHistoryItemV1"}, "type": "array", "title": "History"}, "read_only": {"type": "boolean", "title": "Read Only"}}, "type": "object", "title": "DatasetUpdateV1", "description": "Class for `Dataset` update.\n\nAttributes:\n    name:\n    meta:\n    history:\n    read_only:"}, "DatasetUpdateV2": {"properties": {"name": {"type": "string", "title": "Name"}, "zarr_dir": {"type": "string", "title": "Zarr Dir"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "additionalProperties": false, "type": "object", "title": "DatasetUpdateV2"}, "ErrorModel": {"properties": {"detail": {"anyOf": [{"type": "string"}, {"additionalProperties": {"type": "string"}, "type": "object"}], "title": "Detail"}}, "type": "object", "required": ["detail"], "title": "ErrorModel"}, "Filters": {"properties": {"attributes": {"type": "object", "title": "Attributes"}, "types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Types"}}, "additionalProperties": false, "type": "object", "title": "Filters"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ImagePage": {"properties": {"total_count": {"type": "integer", "title": "Total Count"}, "page_size": {"type": "integer", "title": "Page Size"}, "current_page": {"type": "integer", "title": "Current Page"}, "attributes": {"additionalProperties": {"items": {}, "type": "array"}, "type": "object", "title": "Attributes"}, "types": {"items": {"type": "string"}, "type": "array", "title": "Types"}, "images": {"items": {"$ref": "#/components/schemas/SingleImage"}, "type": "array", "title": "Images"}}, "type": "object", "required": ["total_count", "page_size", "current_page", "attributes", "types", "images"], "title": "ImagePage"}, "ImageQuery": {"properties": {"zarr_url": {"type": "string", "title": "Zarr Url"}, "filters": {"$ref": "#/components/schemas/Filters"}}, "type": "object", "title": "ImageQuery"}, "JobCreateV2": {"properties": {"first_task_index": {"type": "integer", "title": "First Task Index"}, "last_task_index": {"type": "integer", "title": "Last Task Index"}, "slurm_account": {"type": "string", "title": "Slurm Account"}, "worker_init": {"type": "string", "title": "Worker Init"}}, "additionalProperties": false, "type": "object", "title": "JobCreateV2"}, "JobReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "project_id": {"type": "integer", "title": "Project Id"}, "project_dump": {"$ref": "#/components/schemas/ProjectDumpV2"}, "user_email": {"type": "string", "title": "User Email"}, "slurm_account": {"type": "string", "title": "Slurm Account"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "workflow_dump": {"$ref": "#/components/schemas/WorkflowDumpV2"}, "dataset_id": {"type": "integer", "title": "Dataset Id"}, "dataset_dump": {"$ref": "#/components/schemas/DatasetDumpV2"}, "start_timestamp": {"type": "string", "format": "date-time", "title": "Start Timestamp"}, "end_timestamp": {"type": "string", "format": "date-time", "title": "End Timestamp"}, "status": {"type": "string", "title": "Status"}, "log": {"type": "string", "title": "Log"}, "working_dir": {"type": "string", "title": "Working Dir"}, "working_dir_user": {"type": "string", "title": "Working Dir User"}, "first_task_index": {"type": "integer", "title": "First Task Index"}, "last_task_index": {"type": "integer", "title": "Last Task Index"}, "worker_init": {"type": "string", "title": "Worker Init"}}, "type": "object", "required": ["id", "project_dump", "user_email", "workflow_dump", "dataset_dump", "start_timestamp", "status"], "title": "JobReadV2"}, "JobStatusTypeV1": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "JobStatusTypeV1", "description": "Define the available job statuses\n\nAttributes:\n    SUBMITTED:\n        The job was created. This does not guarantee that it was also\n        submitted to an executor (e.g. other errors could have prevented\n        this), nor that it is actually running (e.g. SLURM jobs could be\n        still in the queue).\n    DONE:\n        The job successfully reached its end.\n    FAILED:\n        The workflow terminated with an error."}, "JobStatusTypeV2": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "JobStatusTypeV2", "description": "Define the available job statuses\n\nAttributes:\n    SUBMITTED:\n        The job was created. This does not guarantee that it was also\n        submitted to an executor (e.g. other errors could have prevented\n        this), nor that it is actually running (e.g. SLURM jobs could be\n        still in the queue).\n    DONE:\n        The job successfully reached its end.\n    FAILED:\n        The workflow terminated with an error."}, "JobUpdateV2": {"properties": {"status": {"$ref": "#/components/schemas/JobStatusTypeV2"}}, "type": "object", "required": ["status"], "title": "JobUpdateV2"}, "OAuth2AuthorizeResponse": {"properties": {"authorization_url": {"type": "string", "title": "Authorization Url"}}, "type": "object", "required": ["authorization_url"], "title": "OAuth2AuthorizeResponse"}, "ProjectCreateV1": {"properties": {"name": {"type": "string", "title": "Name"}, "read_only": {"type": "boolean", "title": "Read Only", "default": false}}, "type": "object", "required": ["name"], "title": "ProjectCreateV1", "description": "Class for `Project` creation."}, "ProjectCreateV2": {"properties": {"name": {"type": "string", "title": "Name"}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "ProjectCreateV2"}, "ProjectDumpV1": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "read_only": {"type": "boolean", "title": "Read Only"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "additionalProperties": false, "type": "object", "required": ["id", "name", "read_only", "timestamp_created"], "title": "ProjectDumpV1"}, "ProjectDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "additionalProperties": false, "type": "object", "required": ["id", "name", "timestamp_created"], "title": "ProjectDumpV2"}, "ProjectReadV1": {"properties": {"name": {"type": "string", "title": "Name"}, "read_only": {"type": "boolean", "title": "Read Only", "default": false}, "id": {"type": "integer", "title": "Id"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}}, "type": "object", "required": ["name", "id", "timestamp_created"], "title": "ProjectReadV1", "description": "Class for `Project` read from database.\n\nAttributes:\n    id:\n    name:\n    read_only:"}, "ProjectReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "timestamp_created"], "title": "ProjectReadV2"}, "ProjectUpdateV1": {"properties": {"name": {"type": "string", "title": "Name"}, "read_only": {"type": "boolean", "title": "Read Only"}}, "type": "object", "title": "ProjectUpdateV1", "description": "Class for `Project` update.\n\nAttributes:\n    name:\n    read_only:"}, "ProjectUpdateV2": {"properties": {"name": {"type": "string", "title": "Name"}}, "type": "object", "title": "ProjectUpdateV2"}, "ResourceCreateV1": {"properties": {"path": {"type": "string", "title": "Path"}}, "type": "object", "required": ["path"], "title": "ResourceCreateV1", "description": "Class for `Resource` creation."}, "ResourceDumpV1": {"properties": {"id": {"type": "integer", "title": "Id"}, "path": {"type": "string", "title": "Path"}, "dataset_id": {"type": "integer", "title": "Dataset Id"}}, "type": "object", "required": ["id", "path", "dataset_id"], "title": "ResourceDumpV1"}, "ResourceReadV1": {"properties": {"path": {"type": "string", "title": "Path"}, "id": {"type": "integer", "title": "Id"}, "dataset_id": {"type": "integer", "title": "Dataset Id"}}, "type": "object", "required": ["path", "id", "dataset_id"], "title": "ResourceReadV1", "description": "Class for `Resource` read from database.\n\nAttributes:\n    id:\n    dataset_id:"}, "ResourceUpdateV1": {"properties": {"path": {"type": "string", "title": "Path"}}, "type": "object", "required": ["path"], "title": "ResourceUpdateV1", "description": "Class for `Resource` update."}, "SingleImage": {"properties": {"zarr_url": {"type": "string", "title": "Zarr Url"}, "origin": {"type": "string", "title": "Origin"}, "attributes": {"type": "object", "title": "Attributes"}, "types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Types"}}, "type": "object", "required": ["zarr_url"], "title": "SingleImage", "description": "`SingleImageBase`, with scalar `attributes` values (`None` excluded)."}, "SingleImageUpdate": {"properties": {"zarr_url": {"type": "string", "title": "Zarr Url"}, "attributes": {"type": "object", "title": "Attributes"}, "types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Types"}}, "type": "object", "required": ["zarr_url"], "title": "SingleImageUpdate"}, "StateRead": {"properties": {"data": {"type": "object", "title": "Data"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "id": {"type": "integer", "title": "Id"}}, "type": "object", "required": ["data", "timestamp"], "title": "StateRead", "description": "Class for `State` read from database.\n\nAttributes:\n    id:"}, "StatusReadV2": {"properties": {"status": {"additionalProperties": {"$ref": "#/components/schemas/WorkflowTaskStatusTypeV2"}, "type": "object"}}, "type": "object", "title": "StatusReadV2", "description": "Response type for the\n`/project/{project_id}/status/` endpoint"}, "TaskCollectPipV1": {"properties": {"package": {"type": "string", "title": "Package"}, "package_version": {"type": "string", "title": "Package Version"}, "package_extras": {"type": "string", "title": "Package Extras"}, "python_version": {"type": "string", "title": "Python Version"}, "pinned_package_versions": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Pinned Package Versions"}}, "type": "object", "required": ["package"], "title": "TaskCollectPipV1", "description": "TaskCollectPip class\n\nThis class only encodes the attributes required to trigger a\ntask-collection operation. Other attributes (that are assigned *during*\ntask collection) are defined as part of fractal-server.\n\nTwo cases are supported:\n\n    1. `package` is the path of a local wheel file;\n    2. `package` is the name of a package that can be installed via `pip`.\n\n\nAttributes:\n    package:\n        The name of a `pip`-installable package, or the path to a local\n        wheel file.\n    package_version: Version of the package\n    package_extras: Package extras to include in the `pip install` command\n    python_version: Python version to install and run the package tasks\n    pinned_package_versions:\n        dictionary 'package':'version' used to pin versions for specific\n        packages."}, "TaskCollectPipV2": {"properties": {"package": {"type": "string", "title": "Package"}, "package_version": {"type": "string", "title": "Package Version"}, "package_extras": {"type": "string", "title": "Package Extras"}, "python_version": {"type": "string", "title": "Python Version"}, "pinned_package_versions": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Pinned Package Versions"}}, "type": "object", "required": ["package"], "title": "TaskCollectPipV2", "description": "TaskCollectPipV2 class\n\nThis class only encodes the attributes required to trigger a\ntask-collection operation. Other attributes (that are assigned *during*\ntask collection) are defined as part of fractal-server.\n\nTwo cases are supported:\n\n    1. `package` is the path of a local wheel file;\n    2. `package` is the name of a package that can be installed via `pip`.\n\n\nAttributes:\n    package:\n        The name of a `pip`-installable package, or the path to a local\n        wheel file.\n    package_version: Version of the package\n    package_extras: Package extras to include in the `pip install` command\n    python_version: Python version to install and run the package tasks\n    pinned_package_versions:\n        dictionary 'package':'version' used to pin versions for specific\n        packages."}, "TaskCompatibility": {"properties": {"is_v2_compatible": {"type": "boolean", "title": "Is V2 Compatible"}}, "type": "object", "required": ["is_v2_compatible"], "title": "TaskCompatibility"}, "TaskCreateV1": {"properties": {"source": {"type": "string", "title": "Source"}, "name": {"type": "string", "title": "Name"}, "command": {"type": "string", "title": "Command"}, "input_type": {"type": "string", "title": "Input Type"}, "output_type": {"type": "string", "title": "Output Type"}, "meta": {"type": "object", "title": "Meta", "default": {}}, "version": {"type": "string", "title": "Version"}, "args_schema": {"type": "object", "title": "Args Schema"}, "args_schema_version": {"type": "string", "title": "Args Schema Version"}, "docs_info": {"type": "string", "title": "Docs Info"}, "docs_link": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Docs Link"}}, "type": "object", "required": ["source", "name", "command", "input_type", "output_type"], "title": "TaskCreateV1", "description": "Class for `Task` creation.\n\nAttributes:\n    name:\n    command:\n    input_type:\n    output_type:\n    meta:\n    version:\n    args_schema:\n    args_schema_version:\n    docs_info:\n    docs_link:"}, "TaskCreateV2": {"properties": {"name": {"type": "string", "title": "Name"}, "command_non_parallel": {"type": "string", "title": "Command Non Parallel"}, "command_parallel": {"type": "string", "title": "Command Parallel"}, "source": {"type": "string", "title": "Source"}, "meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "version": {"type": "string", "title": "Version"}, "args_schema_non_parallel": {"type": "object", "title": "Args Schema Non Parallel"}, "args_schema_parallel": {"type": "object", "title": "Args Schema Parallel"}, "args_schema_version": {"type": "string", "title": "Args Schema Version"}, "docs_info": {"type": "string", "title": "Docs Info"}, "docs_link": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Docs Link"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types", "default": {}}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types", "default": {}}}, "additionalProperties": false, "type": "object", "required": ["name", "source"], "title": "TaskCreateV2"}, "TaskDumpV1": {"properties": {"id": {"type": "integer", "title": "Id"}, "source": {"type": "string", "title": "Source"}, "name": {"type": "string", "title": "Name"}, "command": {"type": "string", "title": "Command"}, "input_type": {"type": "string", "title": "Input Type"}, "output_type": {"type": "string", "title": "Output Type"}, "owner": {"type": "string", "title": "Owner"}, "version": {"type": "string", "title": "Version"}}, "type": "object", "required": ["id", "source", "name", "command", "input_type", "output_type"], "title": "TaskDumpV1"}, "TaskDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "command_non_parallel": {"type": "string", "title": "Command Non Parallel"}, "command_parallel": {"type": "string", "title": "Command Parallel"}, "source": {"type": "string", "title": "Source"}, "owner": {"type": "string", "title": "Owner"}, "version": {"type": "string", "title": "Version"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types"}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types"}}, "type": "object", "required": ["id", "name", "type", "source", "input_types", "output_types"], "title": "TaskDumpV2"}, "TaskExportV1": {"properties": {"source": {"type": "string", "title": "Source"}}, "type": "object", "required": ["source"], "title": "TaskExportV1", "description": "Class for `Task` export."}, "TaskExportV2": {"properties": {"source": {"type": "string", "title": "Source"}}, "type": "object", "required": ["source"], "title": "TaskExportV2"}, "TaskImportV1": {"properties": {"source": {"type": "string", "title": "Source"}}, "type": "object", "required": ["source"], "title": "TaskImportV1", "description": "Class for `Task` import."}, "TaskImportV2": {"properties": {"source": {"type": "string", "title": "Source"}}, "type": "object", "required": ["source"], "title": "TaskImportV2"}, "TaskLegacyReadV2": {"properties": {"source": {"type": "string", "title": "Source"}, "id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "command": {"type": "string", "title": "Command"}, "input_type": {"type": "string", "title": "Input Type"}, "output_type": {"type": "string", "title": "Output Type"}, "meta": {"type": "object", "title": "Meta", "default": {}}, "owner": {"type": "string", "title": "Owner"}, "version": {"type": "string", "title": "Version"}, "args_schema": {"type": "object", "title": "Args Schema"}, "args_schema_version": {"type": "string", "title": "Args Schema Version"}, "docs_info": {"type": "string", "title": "Docs Info"}, "docs_link": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Docs Link"}, "is_v2_compatible": {"type": "boolean", "title": "Is V2 Compatible"}}, "type": "object", "required": ["source", "id", "name", "command", "input_type", "output_type", "is_v2_compatible"], "title": "TaskLegacyReadV2", "description": "Class for `Task` read from database.\n\nAttributes:\n    id:\n    name:\n    command:\n    input_type:\n    output_type:\n    meta:\n    version:\n    args_schema:\n    args_schema_version:\n    docs_info:\n    docs_link:"}, "TaskReadV1": {"properties": {"source": {"type": "string", "title": "Source"}, "id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "command": {"type": "string", "title": "Command"}, "input_type": {"type": "string", "title": "Input Type"}, "output_type": {"type": "string", "title": "Output Type"}, "meta": {"type": "object", "title": "Meta", "default": {}}, "owner": {"type": "string", "title": "Owner"}, "version": {"type": "string", "title": "Version"}, "args_schema": {"type": "object", "title": "Args Schema"}, "args_schema_version": {"type": "string", "title": "Args Schema Version"}, "docs_info": {"type": "string", "title": "Docs Info"}, "docs_link": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Docs Link"}}, "type": "object", "required": ["source", "id", "name", "command", "input_type", "output_type"], "title": "TaskReadV1", "description": "Class for `Task` read from database.\n\nAttributes:\n    id:\n    name:\n    command:\n    input_type:\n    output_type:\n    meta:\n    version:\n    args_schema:\n    args_schema_version:\n    docs_info:\n    docs_link:"}, "TaskReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "type": {"type": "string", "enum": ["parallel", "non_parallel", "compound"], "title": "Type"}, "source": {"type": "string", "title": "Source"}, "owner": {"type": "string", "title": "Owner"}, "version": {"type": "string", "title": "Version"}, "command_non_parallel": {"type": "string", "title": "Command Non Parallel"}, "command_parallel": {"type": "string", "title": "Command Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "args_schema_non_parallel": {"type": "object", "title": "Args Schema Non Parallel"}, "args_schema_parallel": {"type": "object", "title": "Args Schema Parallel"}, "args_schema_version": {"type": "string", "title": "Args Schema Version"}, "docs_info": {"type": "string", "title": "Docs Info"}, "docs_link": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Docs Link"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types"}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types"}}, "type": "object", "required": ["id", "name", "type", "source", "meta_parallel", "meta_non_parallel", "input_types", "output_types"], "title": "TaskReadV2"}, "TaskUpdateV1": {"properties": {"source": {"type": "string", "title": "Source"}, "name": {"type": "string", "title": "Name"}, "input_type": {"type": "string", "title": "Input Type"}, "output_type": {"type": "string", "title": "Output Type"}, "command": {"type": "string", "title": "Command"}, "meta": {"type": "object", "title": "Meta"}, "version": {"type": "string", "title": "Version"}, "args_schema": {"type": "object", "title": "Args Schema"}, "args_schema_version": {"type": "string", "title": "Args Schema Version"}, "docs_info": {"type": "string", "title": "Docs Info"}, "docs_link": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Docs Link"}}, "type": "object", "title": "TaskUpdateV1", "description": "Class for `Task` update.\n\nAttributes:\n    name:\n    input_type:\n    output_type:\n    command:\n    source:\n    meta:\n    version:\n    args_schema:\n    args_schema_version:\n    docs_info:\n    docs_link:"}, "TaskUpdateV2": {"properties": {"name": {"type": "string", "title": "Name"}, "version": {"type": "string", "title": "Version"}, "command_parallel": {"type": "string", "title": "Command Parallel"}, "command_non_parallel": {"type": "string", "title": "Command Non Parallel"}, "input_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Input Types"}, "output_types": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Output Types"}}, "type": "object", "title": "TaskUpdateV2"}, "UserCreate": {"properties": {"email": {"type": "string", "format": "email", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}, "slurm_user": {"type": "string", "title": "Slurm User"}, "cache_dir": {"type": "string", "title": "Cache Dir"}, "username": {"type": "string", "title": "Username"}, "slurm_accounts": {"items": {"type": "string"}, "type": "array", "title": "Slurm Accounts"}}, "type": "object", "required": ["email", "password"], "title": "UserCreate", "description": "Schema for `User` creation.\n\nAttributes:\n    slurm_user:\n    cache_dir:\n    username:\n    slurm_accounts:"}, "UserRead": {"properties": {"id": {"title": "Id"}, "email": {"type": "string", "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}, "slurm_user": {"type": "string", "title": "Slurm User"}, "cache_dir": {"type": "string", "title": "Cache Dir"}, "username": {"type": "string", "title": "Username"}, "slurm_accounts": {"items": {"type": "string"}, "type": "array", "title": "Slurm Accounts"}}, "type": "object", "required": ["email", "slurm_accounts"], "title": "UserRead", "description": "Schema for `User` read from database.\n\nAttributes:\n    slurm_user:\n    cache_dir:\n    username:\n    slurm_accounts:"}, "UserUpdate": {"properties": {"password": {"type": "string", "title": "Password"}, "email": {"type": "string", "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active"}, "is_superuser": {"type": "boolean", "title": "Is Superuser"}, "is_verified": {"type": "boolean", "title": "Is Verified"}, "slurm_user": {"type": "string", "title": "Slurm User"}, "cache_dir": {"type": "string", "title": "Cache Dir"}, "username": {"type": "string", "title": "Username"}, "slurm_accounts": {"items": {"type": "string"}, "type": "array", "title": "Slurm Accounts"}}, "type": "object", "title": "UserUpdate", "description": "Schema for `User` update.\n\nAttributes:\n    slurm_user:\n    cache_dir:\n    username:\n    slurm_accounts:"}, "UserUpdateStrict": {"properties": {"cache_dir": {"type": "string", "title": "Cache Dir"}, "slurm_accounts": {"items": {"type": "string"}, "type": "array", "title": "Slurm Accounts"}}, "additionalProperties": false, "type": "object", "title": "UserUpdateStrict", "description": "Schema for `User` self-editing.\n\nAttributes:\n    cache_dir:\n    slurm_accounts:"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "WorkflowCreateV1": {"properties": {"name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["name"], "title": "WorkflowCreateV1", "description": "Task for `Workflow` creation."}, "WorkflowCreateV2": {"properties": {"name": {"type": "string", "title": "Name"}}, "additionalProperties": false, "type": "object", "required": ["name"], "title": "WorkflowCreateV2"}, "WorkflowDumpV1": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "project_id", "timestamp_created"], "title": "WorkflowDumpV1"}, "WorkflowDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "timestamp_created": {"type": "string", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "project_id", "timestamp_created"], "title": "WorkflowDumpV2"}, "WorkflowExportV1": {"properties": {"name": {"type": "string", "title": "Name"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskExportV1"}, "type": "array", "title": "Task List"}}, "type": "object", "required": ["name", "task_list"], "title": "WorkflowExportV1", "description": "Class for `Workflow` export.\n\nAttributes:\n    task_list:"}, "WorkflowExportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskExportV2"}, "type": "array", "title": "Task List"}}, "type": "object", "required": ["name", "task_list"], "title": "WorkflowExportV2", "description": "Class for `Workflow` export.\n\nAttributes:\n    task_list:"}, "WorkflowImportV1": {"properties": {"name": {"type": "string", "title": "Name"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskImportV1"}, "type": "array", "title": "Task List"}}, "type": "object", "required": ["name", "task_list"], "title": "WorkflowImportV1", "description": "Class for `Workflow` import.\n\nAttributes:\n    task_list:"}, "WorkflowImportV2": {"properties": {"name": {"type": "string", "title": "Name"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskImportV2"}, "type": "array", "title": "Task List"}}, "type": "object", "required": ["name", "task_list"], "title": "WorkflowImportV2", "description": "Class for `Workflow` import.\n\nAttributes:\n    task_list:"}, "WorkflowReadV1": {"properties": {"name": {"type": "string", "title": "Name"}, "id": {"type": "integer", "title": "Id"}, "project_id": {"type": "integer", "title": "Project Id"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskReadV1"}, "type": "array", "title": "Task List"}, "project": {"$ref": "#/components/schemas/ProjectReadV1"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}}, "type": "object", "required": ["name", "id", "project_id", "task_list", "project", "timestamp_created"], "title": "WorkflowReadV1", "description": "Task for `Workflow` read from database.\n\nAttributes:\n    id:\n    project_id:\n    task_list:\n    project:"}, "WorkflowReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "project_id": {"type": "integer", "title": "Project Id"}, "task_list": {"items": {"$ref": "#/components/schemas/WorkflowTaskReadV2"}, "type": "array", "title": "Task List"}, "project": {"$ref": "#/components/schemas/ProjectReadV2"}, "timestamp_created": {"type": "string", "format": "date-time", "title": "Timestamp Created"}}, "type": "object", "required": ["id", "name", "project_id", "task_list", "project", "timestamp_created"], "title": "WorkflowReadV2"}, "WorkflowTaskCreateV1": {"properties": {"meta": {"type": "object", "title": "Meta"}, "args": {"type": "object", "title": "Args"}, "order": {"type": "integer", "title": "Order"}}, "type": "object", "title": "WorkflowTaskCreateV1", "description": "Class for `WorkflowTask` creation.\n\nAttributes:\n    order:"}, "WorkflowTaskCreateV2": {"properties": {"meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "args_non_parallel": {"type": "object", "title": "Args Non Parallel"}, "args_parallel": {"type": "object", "title": "Args Parallel"}, "order": {"type": "integer", "title": "Order"}, "input_filters": {"$ref": "#/components/schemas/Filters"}, "is_legacy_task": {"type": "boolean", "title": "Is Legacy Task", "default": false}}, "additionalProperties": false, "type": "object", "title": "WorkflowTaskCreateV2"}, "WorkflowTaskDumpV1": {"properties": {"id": {"type": "integer", "title": "Id"}, "order": {"type": "integer", "title": "Order"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskDumpV1"}}, "type": "object", "required": ["id", "workflow_id", "task_id", "task"], "title": "WorkflowTaskDumpV1"}, "WorkflowTaskDumpV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "order": {"type": "integer", "title": "Order"}, "is_legacy_task": {"type": "boolean", "title": "Is Legacy Task"}, "input_filters": {"$ref": "#/components/schemas/Filters"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskDumpV2"}, "task_legacy_id": {"type": "integer", "title": "Task Legacy Id"}, "task_legacy": {"$ref": "#/components/schemas/TaskDumpV1"}}, "type": "object", "required": ["id", "workflow_id", "is_legacy_task", "input_filters"], "title": "WorkflowTaskDumpV2"}, "WorkflowTaskExportV1": {"properties": {"meta": {"type": "object", "title": "Meta"}, "args": {"type": "object", "title": "Args"}, "task": {"$ref": "#/components/schemas/TaskExportV1"}}, "type": "object", "required": ["task"], "title": "WorkflowTaskExportV1", "description": "Class for `WorkflowTask` export.\n\nAttributes:\n    task:"}, "WorkflowTaskExportV2": {"properties": {"meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "args_non_parallel": {"type": "object", "title": "Args Non Parallel"}, "args_parallel": {"type": "object", "title": "Args Parallel"}, "input_filters": {"$ref": "#/components/schemas/Filters"}, "is_legacy_task": {"type": "boolean", "title": "Is Legacy Task", "default": false}, "task": {"$ref": "#/components/schemas/TaskExportV2"}, "task_legacy": {"$ref": "#/components/schemas/TaskExportV1"}}, "type": "object", "title": "WorkflowTaskExportV2"}, "WorkflowTaskImportV1": {"properties": {"meta": {"type": "object", "title": "Meta"}, "args": {"type": "object", "title": "Args"}, "task": {"$ref": "#/components/schemas/TaskImportV1"}}, "type": "object", "required": ["task"], "title": "WorkflowTaskImportV1", "description": "Class for `WorkflowTask` import.\n\nAttributes:\n    task:"}, "WorkflowTaskImportV2": {"properties": {"meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "args_non_parallel": {"type": "object", "title": "Args Non Parallel"}, "args_parallel": {"type": "object", "title": "Args Parallel"}, "input_filters": {"$ref": "#/components/schemas/Filters"}, "is_legacy_task": {"type": "boolean", "title": "Is Legacy Task", "default": false}, "task": {"$ref": "#/components/schemas/TaskImportV2"}, "task_legacy": {"$ref": "#/components/schemas/TaskImportV1"}}, "type": "object", "title": "WorkflowTaskImportV2"}, "WorkflowTaskReadV1": {"properties": {"meta": {"type": "object", "title": "Meta"}, "args": {"type": "object", "title": "Args"}, "id": {"type": "integer", "title": "Id"}, "order": {"type": "integer", "title": "Order"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskReadV1"}}, "type": "object", "required": ["id", "workflow_id", "task_id", "task"], "title": "WorkflowTaskReadV1", "description": "Class for `WorkflowTask` read from database.\n\nAttributes:\n    id:\n    order:\n    workflow_id:\n    task_id:\n    task:"}, "WorkflowTaskReadV2": {"properties": {"id": {"type": "integer", "title": "Id"}, "workflow_id": {"type": "integer", "title": "Workflow Id"}, "order": {"type": "integer", "title": "Order"}, "meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "args_non_parallel": {"type": "object", "title": "Args Non Parallel"}, "args_parallel": {"type": "object", "title": "Args Parallel"}, "input_filters": {"$ref": "#/components/schemas/Filters"}, "is_legacy_task": {"type": "boolean", "title": "Is Legacy Task"}, "task_type": {"type": "string", "title": "Task Type"}, "task_id": {"type": "integer", "title": "Task Id"}, "task": {"$ref": "#/components/schemas/TaskReadV2"}, "task_legacy_id": {"type": "integer", "title": "Task Legacy Id"}, "task_legacy": {"$ref": "#/components/schemas/TaskReadV1"}}, "type": "object", "required": ["id", "workflow_id", "input_filters", "is_legacy_task", "task_type"], "title": "WorkflowTaskReadV2"}, "WorkflowTaskStatusTypeV1": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "WorkflowTaskStatusTypeV1", "description": "Define the available values for the status of a `WorkflowTask`.\n\nThis model is used within the `Dataset.history` attribute, which is\nconstructed in the runner and then used in the API (e.g. in the\n`api/v1/project/{project_id}/dataset/{dataset_id}/status` endpoint).\n\nAttributes:\n    SUBMITTED: The `WorkflowTask` is part of a running job.\n    DONE: The most-recent execution of this `WorkflowTask` was successful.\n    FAILED: The most-recent execution of this `WorkflowTask` failed."}, "WorkflowTaskStatusTypeV2": {"type": "string", "enum": ["submitted", "done", "failed"], "title": "WorkflowTaskStatusTypeV2", "description": "Define the available values for the status of a `WorkflowTask`.\n\nThis model is used within the `Dataset.history` attribute, which is\nconstructed in the runner and then used in the API (e.g. in the\n`api/v2/project/{project_id}/dataset/{dataset_id}/status` endpoint).\n\nAttributes:\n    SUBMITTED: The `WorkflowTask` is part of a running job.\n    DONE: The most-recent execution of this `WorkflowTask` was successful.\n    FAILED: The most-recent execution of this `WorkflowTask` failed."}, "WorkflowTaskUpdateV1": {"properties": {"meta": {"type": "object", "title": "Meta"}, "args": {"type": "object", "title": "Args"}}, "type": "object", "title": "WorkflowTaskUpdateV1", "description": "Class for `WorkflowTask` update."}, "WorkflowTaskUpdateV2": {"properties": {"meta_non_parallel": {"type": "object", "title": "Meta Non Parallel"}, "meta_parallel": {"type": "object", "title": "Meta Parallel"}, "args_non_parallel": {"type": "object", "title": "Args Non Parallel"}, "args_parallel": {"type": "object", "title": "Args Parallel"}, "input_filters": {"$ref": "#/components/schemas/Filters"}}, "type": "object", "title": "WorkflowTaskUpdateV2"}, "WorkflowUpdateV1": {"properties": {"name": {"type": "string", "title": "Name"}, "reordered_workflowtask_ids": {"items": {"type": "integer"}, "type": "array", "title": "Reordered Workflowtask Ids"}}, "type": "object", "title": "WorkflowUpdateV1", "description": "Task for `Workflow` update.\n\nAttributes:\n    name:\n    reordered_workflowtask_ids:"}, "WorkflowUpdateV2": {"properties": {"name": {"type": "string", "title": "Name"}, "reordered_workflowtask_ids": {"items": {"type": "integer"}, "type": "array", "title": "Reordered Workflowtask Ids"}}, "type": "object", "title": "WorkflowUpdateV2"}, "_DatasetHistoryItemV1": {"properties": {"workflowtask": {"$ref": "#/components/schemas/WorkflowTaskDumpV1"}, "status": {"$ref": "#/components/schemas/WorkflowTaskStatusTypeV1"}, "parallelization": {"type": "object", "title": "Parallelization"}}, "type": "object", "required": ["workflowtask", "status"], "title": "_DatasetHistoryItemV1", "description": "Class for an item of `Dataset.history`.\n\nAttributes:\n    workflowtask:\n    status:\n    parallelization: If provided, it includes keys `parallelization_level`\n        and `component_list`."}, "_DatasetHistoryItemV2": {"properties": {"workflowtask": {"$ref": "#/components/schemas/WorkflowTaskDumpV2"}, "status": {"$ref": "#/components/schemas/WorkflowTaskStatusTypeV2"}, "parallelization": {"type": "object", "title": "Parallelization"}}, "type": "object", "required": ["workflowtask", "status"], "title": "_DatasetHistoryItemV2", "description": "Class for an item of `Dataset.history`."}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/auth/token/login"}}}, "APIKeyCookie": {"type": "apiKey", "in": "cookie", "name": "fastapiusersauth"}}}}